Include('Common/Libs/CLCommon.ntl');
CLC_IncludeLibs();
var _skipPerming = false;
var _endTime = null;

function NTMain() {
	_endTime = GetTickCount() + 1000 * 60 * 5 + 1000 * 15; // 5:15 until we start
	Delay(5000);
	Include('Common/Globals/NTConfig.ntl');
	CLC_IncludeConfig();
	NT_LoadConfig();
	CLSI_LoadNIPFiles();
	CLC_File("Configs/"+MyRealm+"/AMS/MuleStatus/" + me.account + "_mulegame.txt", 1, me.gamename);
	
	Print("Got myself into a perm and drop game!");
	
	NTConfig_IdentAtCain = false;
	NTConfig_Gamble = false;
	CLTMGR_TownManager();
	
	while (!_skipPerming && GetTickCount() < _endTime) {
		SetStatusText('Perming Game ' + parseInt((_endTime - GetTickCount())/1000)
				+ ' seconds');
		Delay(1000);
	}
	if(!_skipPerming) { SetStatusText (' Game Permed'); }
	else if(_skipPerming) { SetStatusText('Game perming skipped'); }
	
	CLTM_CheckAct(1);
	CLTM_TownMove('stash');
	CLT_DoInteract(CLC_FindUnit(NTC_UNIT_OBJECT, NTC_UNIT_STASH, 40));
	var _items = me.GetItems();
	for(var i = 0 ; i < _items.length ; i++) {
		// 549 = Cube, 543 = Keys
		        if(_items[i].mode == 0 && CLSI_CheckItem(_items[i], false)[0] in [1, -1] &&
                !CLSI_IsIgnoredItemInt(_items[i].classid) && _items[i].classid != 549 && _items[i].classid != 543 &&
                !CLRW_CheckItem(_items[i], false) && !CLCU_CheckItem(_items[i]) && !CPD_CubeGem(_items[i].classid)) {
					if (_items[i].itemloc == 0 && NTConfig_Columns[_items[i].y][_items[i].x] != 0) {
						CLT_DropItem(_items[i]);
						}
				else if (_items[i].itemloc == 4) CLT_DropItem(_items[i]);
				}
			}
	me.Cancel(1);
	CPD_Organize();
	CPD_StashShit();
	CLC_File("Configs/"+MyRealm+"/AMS/MuleStatus/" + me.account + "_charstatus.txt", 1, "Mule");
	CLC_Delay(500);
	CLC_File("Configs/"+MyRealm+"/AMS/MuleStatus/" + me.account + "_mulingstatus.txt", 1, "true");
	CLC_Delay(750);
	ExitGame();
}

function CPD_CubeGem(classid){
	gemId = [557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580,
		582, 583, 584, 585];
		for(var i = 0; i < gemId.length; i++) {
			if(classid === gemId[i]) {
				return true;
			}
		}
	return false;
}

function CPD_Organize(){
	var _item;
	var keepIds = new Array();
	var _items = me.GetItems();
	
	if(!_items)
		return false;	
		
	CLU_MoveToStash();
	
	for(var i = 0 ; i < _items.length ; i++) {		
		if(_items[i].itemloc == 0  && !CLSI_IsIgnoredItemInt(_items[i].classid) && _items[i].classid != 543 && NTConfig_Columns[_items[i].y][_items[i].x] > 0 || _items[i].itemloc == 4 && _items[i].classid != 549 && _items[i].mode != 1) {
			keepIds.push(_items[i].classid);
			CLT_DropItem(_items[i]);		
		}
	}
	me.Cancel(1);
	CLC_Delay(1500);
	
	if(keepIds.length > 0) {
		for(var j = 0; j < keepIds.length; j++) {
			_item = CLC_FindUnit(NTC_UNIT_ITEM, keepIds[j]);
			if(_item) {
				if(CLT_CheckSpace(_item.xsize, _item.ysize)){
					CLSI_PickUpItemInt(_item);
				} 
				else{
					Print("Need to make room in inventory!");
					CPD_StashShit();
					CLSI_PickUpItemInt(_item);
				}				
			} 
		}
	}
}

function CPD_StashShit(){
	var _stash;
	
	CLTM_TownMove("stash");

	_stash = CLC_FindUnit(NTC_UNIT_OBJECT, NTC_UNIT_STASH, 5);
	
	if(CLT_DoInteract(_stash)) {
		CLT_ManageStash();
	}
	me.Cancel(1);
}