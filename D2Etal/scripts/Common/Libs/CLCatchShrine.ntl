// no colors to convert
var CLCS_CatchShrineCount  = new Array();
var lastShrineLoc;
var area;
var ThisShrine;
var XpSearchContinue = true; 
var FoundShrineArea = me.areaid;

function CLCS_CheckShrines (_shrine) {
	for (var i = 0; i < NTConfig_Shrines.length; i++) {
		if (_shrine.shrinetype == NTConfig_Shrines[i] && (!me.GetState(128) && !me.GetState(129) && !me.GetState(130) && !me.GetState(131) && !me.GetState(132) && !me.GetState(133) && !me.GetState(134) && !me.GetState(135) && !me.GetState(136) && !me.GetState(137) && !me.GetState(138))) {
			lastShrineLoc = i;
			return true;
		}
		else if (_shrine.shrinetype == NTConfig_Shrines[i] && (_shrine.shrinetype == 1 || _shrine.shrinetype == 2 || _shrine.shrinetype == 3 || _shrine.shrinetype == 18 || _shrine.shrinetype == 20 || _shrine.shrinetype == 2)){
			lastShrineLoc = i;
			return true;
		}
		else if (_shrine.shrinetype == NTConfig_Shrines[i] && (me.GetState(128) || me.GetState(129)|| me.GetState(130)|| me.GetState(131)|| me.GetState(132)|| me.GetState(133)|| me.GetState(134)|| me.GetState(135)|| me.GetState(136)|| me.GetState(137)|| me.GetState(138)) && i <= lastShrineLoc) {
			lastShrineLoc = i;
			return true;
		}
	}
	return false;
}

function CLCS_CheckCatchShrine(_shrine) {
	for (var i = 0; i < CLCS_CatchShrineCount.length; i++)
		if (CLCS_CatchShrineCount[i] == _shrine.gid)
			return false;
	
	CLCS_CatchShrineCount.push(_shrine.gid);
	return true;
}

function CLCS_CatchShrine() {
	var shrine = GetUnit(NTC_UNIT_OBJECT, GetLocaleString(3255));
	var _isTelekinesis = CLC_GetSkillLevel(43);
	
	if (shrine) {
		do {
			if (!shrine.mode && CLCS_CheckCatchShrine(shrine) && CLCS_CheckShrines (shrine)) {
				if(NTConfig_LogShrines){
					CLU_LogPrint("logs/shrinelog/"+me.charname+"-shrinelog.txt", " MyCatchShrine[" + shrine.shrinetype + "] " + "ObjectName[" + shrine.name + "] " + "ClassId[" + shrine.classid+ "] ");				
				}
				if (CLM_MoveCloseInt(shrine, 20)){
					if (shrine.shrinetype == 15 && NTConfig_ShareExpShrine){
						CLM_MoveTo(me.areaid, shrine.x+3, shrine.y+3);
						CLA_ClearPosition(20, false, 0);
						CLM_MoveTo(me.areaid, shrine.x+3, shrine.y+3);
						CLM_MakeTP();
						area = GetArea();
						Say("Exp Shrine up in Act " + me.act + " " + area.name);!i
						CLA_ClearPosition(20, false, 0);
						CLSI_PickItems();
					}
					else if (NTC_CHAR_CLASS_SORCERESS && _isTelekinesis) {
						CLC_CastSkill(43, NTC_HAND_RIGHT, shrine); 
					}
					else if (!_isTelekinesis || !NTConfig_Telekinesis) {
						CLM_GetCloserInt(shrine);
						CLC_DoClick(NTC_CLICK_LDOWN, NTC_SHIFT_NONE, shrine);
					}
					if (shrine.shrinetype == 18) {
						CLSI_PickItems();
					}
					if (me.GetState(134)) {
						CLP_DoPrecast(true);
					}
					break;
				}
			}
		} while (shrine.GetNext());
	}
}

function CLCS_GrabShrineXp(){
	CLM_UsePortal("BluePortal", FoundShrineArea);
	if(ThisShrine){
		while(!me.GetState(137) && !ThisShrine.mode){
			if(CLM_GetCloserIntS(ThisShrine)){
				if(NTConfig_LogShrines){
					CLU_LogPrint("logs/shrinelog/"+me.charname+"-leechshrinelog.txt", " LBXP Shrine Type[" + ThisShrine.shrinetype + "] " + "ObjectName[" + ThisShrine.name + "] " + "ClassId[" + ThisShrine.classid+ "] ");				
				}
				CLC_DoClick(NTC_CLICK_LDOWN, NTC_SHIFT_NONE, ThisShrine);
			}
			CLC_Delay(100);															
		}		
	}
	CLTM_CheckAct(5);
}

function CLCS_FindShrines(){	
	var ShrineIds = [2, 81, 83, 85, 86, 93, 96, 97, 109, 116, 120, 123, 124, 133, 134, 135, 
					136, 150, 151, 172, 173, 184, 190, 191, 197, 199, 200, 201, 226, 231, 
					232, 260, 275, 276, 277, 278, 279, 282, 299, 300, 303, 325, 361, 414, 
					415, 421, 422, 423, 427, 428, 464, 465, 472, 479, 483, 484, 488, 491, 
					492, 495, 497, 499, 503, 509, 512, 520, 521, 522];
	var ShrineLocs = [];
	var unit = GetPresetUnits(me.areaid);
	if(unit){	
		
		for (var j = 0; j < unit.length; j++){
			for (var c = 0; c < ShrineIds.length; c++){				
				if (ShrineIds[c] == unit[j].id){
						ShrineLocs.push([unit[j].roomx*5+unit[j].x + 3,unit[j].roomy*5+unit[j].y])					
				}
			}
		}
	}
	while(ShrineLocs.length > 0){
		ShrineLocs.sort(CLC_SortRoomInt);
		var _room = ShrineLocs.shift();
		CLM_MoveTo(me.areaid, _room[0], _room[1]);		
		var shrine = CLC_FindUnit(NTC_UNIT_OBJECT, "shrine");

		if(shrine){
			do{		
				if(GetDistance(me.x,me.y,shrine.x,shrine.y)<5){
					if(shrine.shrinetype == 15 && shrine.mode == 0){ 	
						ThisShrine = shrine;
						XpSearchContinue = false;									
						FoundShrineArea = me.areaid;									
						if(NTConfig_ClearAroundShrine)
							CLA_ClearPos(2, 15, 500, true);
						if(GetDistance(me, shrine) > 2)
							CLM_MoveTo(shrine.areaid, shrine.x+1, shrine.y);
						if(!CLM_MakeTP(true)){  
							CLC_SendMsgToScript("CScriptControl.ntj", "CLM_MakeTP()");
							break;
						}
					}
				}
			}while(shrine.GetNext());
		}
		if(CLC_InTown())
			break;
	}	
}

function CLCS_SearchShrines(){// could add an arguement here to call which area array to work with so can use this in choas and baal
	if(_FindXPArea.length > 0){ 
		for(var i = 0 ; i < _FindXPArea.length && XpSearchContinue ; i++){ 	
			CLTM_CheckAct();												  		
			if(_FindXPArea[i] == 2)
				CheckBloodMoor();
			else if(_FindXPArea[i] == 7) // could make this into a switch statement switch(_FindXPArea[i]) if I add more areas that don't have wp's
				CheckTamoeHighland();
			else if(CLC_InTown()){	
				CLTMGR_TownManager();
				CLTM_TownMove("waypoint");			
				Delay(1000)
				CLM_TakeWaypoint(_FindXPArea[i]);							 
			}															  
			CLP_DoPrecast(true);
			CLCS_FindShrines();
		}
	}
}
