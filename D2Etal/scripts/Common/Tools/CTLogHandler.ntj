// CTLogHandler.ntj

function NTMain() {
	Include("Common/Libs/CLLogger.ntl");
	if (NTConfig_LoggingEnabled) {
		Print(COLOR_4 + "LogHandler: " + COLOR_2 + " registered");
		//NTC_SendLogToOOG(NTC_LOG_COMMON, COLOR_2 + "NTLogHandler: registered");
		RegisterEvent(EVENT_SCRIPTMSG, CTLH_scriptMsgEvents);
	}
	while(1) {
		CLC_Delay(700);
	}
}

// log msgs are of the format: scriptname, ticks, type, level, msg separated by CLL_DELIM
function CTLH_scriptMsgEvents(msg) {
    log = msg.split(CLL_DELIM);
    if (log.length != 4) {
		NTC_SendLogToOOG(NTC_LOG_COMMON, COLOR_1 + "CTLogHandler: invalid log message dropped");
		return;
	} 
	time = CLL_TimeStamp(parseInt(log[0]));
	type = parseInt(log[1]);
	level = parseInt(log[2]);
	message = log[3];

	switch(type) {
		case CLL_TYPE_LOG:
			if (level < NTConfig_Log_Level) return;
			filename = "Configs/"+MyRealm+"/logs/Logger/" + me.account + "-" + me.charname + "-log.txt";
			break;
		case CLL_TYPE_ITEM:
			if (level < NTConfig_Item_Level) return;
			filename = "Configs/"+MyRealm+"/logs/Logger/" + me.account + "-" + me.charname + "-item.txt";
			break;
		default:
			CLC_SendLogToOOG(NTC_LOG_COMMON, COLOR_1 + "CTLogHandler: invalid log message (type) dropped");
			
	}
	if (message == "") {
		CLL_InitLog(filename, time);
	} else {
		CLL_LogLine(filename, time, level, message);
	}
}



	